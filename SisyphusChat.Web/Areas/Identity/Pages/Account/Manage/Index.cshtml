@page
@using Microsoft.AspNetCore.Identity
@using SisyphusChat.Infrastructure.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Username" class="form-control" placeholder="Please choose your username." disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.NewUsername" class="form-control" placeholder="Please enter new username." />
                <label asp-for="Input.NewUsername" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <div class="image-container">
                    <button type="button" id="uploadBtn" style="border: none; background: transparent; padding: 0;">
                        @if (Model?.Input?.Picture != null && Model.Input.Picture.Length > 0)
                        {
                            var base64Image = Convert.ToBase64String(Model.Input.Picture);
                            var imgSrc = $"data:image/jpeg;base64,{base64Image}";
                            <img id="profileImage" src="@imgSrc" alt="User Avatar" />
                        }
                        else
                        {
                            <img id="profileImage" src="~/images/default_pfp.jpg" alt="Default Avatar" />
                        }
                    </button>
                    <div class="overlay" id="uploadBtn-overlay">
                        <div class="text">Change profile picture</div>
                    </div>
                </div>
            </div>
            <input asp-for="Input.ProfilePicture" type="file" id="fileInput" style="display: none;" accept="image/*" />
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
    </div>
    <div class="col-md-6">
        <!-- Other content -->
    </div>
</div>

<style>
    .image-container {
        position: relative;
        width: 150px;
        height: 150px;
        overflow: hidden; /* Ensure overflow is hidden for round image */
        border-radius: 50%; /* Make the container round */
    }

    .image-container img {
        width: 100%;
        height: 100%;
        border-radius: 50%; /* Make the image round */
        object-fit: cover; /* Ensure image covers the area without distortion */
    }

    .image-container .overlay {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        height: 100%;
        width: 100%;
        opacity: 0;
        transition: .5s ease;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .image-container:hover .overlay {
        opacity: 1;
        cursor: pointer;
    }

    .text {
        color: white;
        font-size: 20px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }

    #profileImage {
        border-color: #007bff;
        cursor: pointer;
    }

    #profileImage:hover {
        opacity: 0.8;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const uploadBtn = document.getElementById('uploadBtn-overlay');
            const fileInput = document.getElementById('fileInput');
            const profileImage = document.getElementById('profileImage');
            const profileForm = document.getElementById('profile-form');

            const maxSizeMB = 2;
            const maxSizeBytes = maxSizeMB * 1024 * 1024;

            // Store the current image source
            const originalImageSrc = profileImage.src;

            if (uploadBtn && fileInput && profileImage) {
                uploadBtn.addEventListener('click', function () {
                    fileInput.click();
                });

                fileInput.addEventListener('change', function (event) {
                    const file = event.target.files[0];
                    if (file) {
                        if (file.size > maxSizeBytes) {
                            alert(`File size exceeds ${maxSizeMB} MB. Please choose a smaller file.`);
                            fileInput.value = ''; // Reset file input
                            profileImage.src = originalImageSrc; // Reset the image preview to original
                            return;
                        }

                        const reader = new FileReader();
                        reader.onload = function (e) {
                            profileImage.src = e.target.result; // Set the profile image directly to the uploaded file
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }
        });
    </script>
}