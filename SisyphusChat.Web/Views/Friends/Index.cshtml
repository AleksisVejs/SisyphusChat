@{
    ViewData["Title"] = "Friends Page";
}

@model SisyphusChat.Core.Models.FRequestModel

<div class="friends-page-container">
    <div class="friends-header">
        <h2>Friends</h2>
        <div class="header-buttons">
            <a class="add-friend-button" asp-area="" asp-controller="Friends" asp-action="Add" title="Add Friends">+</a>
        </div>
    </div>

    <!-- Friend Requests Section -->
    <div class="requests-section">
        <div class="requests-container">
            <!-- Sent Requests -->
            <div class="request-column">
                <h3>Sent Requests</h3>
                <div class="request-list">
                    @if (Model.SentRequests.Any())
                    {
                        foreach (var friend in Model.SentRequests)
                        {
                            <div class="request-card">
                                <div class="request-info">
                                    <div class="request-username">@friend.ReqReceiver.UserName</div>
                                </div>
                                <form method="post" asp-action="CancelRequest" asp-controller="Friends">
                                    <input type="hidden" name="receiverId" value="@friend.ReqReceiverId" />
                                    <button type="submit" class="btn cancel-button">Cancel</button>
                                </form>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="empty-message">No pending sent requests</p>
                    }
                </div>
            </div>

            <!-- Received Requests -->
            <div class="request-column">
                <h3>Received Requests</h3>
                <div class="request-list">
                    @if (Model.ReceivedRequests.Any())
                    {
                        foreach (var friend in Model.ReceivedRequests)
                        {
                            <div class="request-card">
                                <div class="request-info">
                                    <div class="request-username">@friend.ReqSender.UserName</div>
                                </div>
                                <div class="response-buttons">
                                    <form method="post" asp-action="AcceptRequest" asp-controller="Friends" style="display:inline;">
                                        <input type="hidden" name="senderId" value="@friend.ReqSenderId" />
                                        <button type="submit" class="btn accept-button">Accept</button>
                                    </form>
                                    <form method="post" asp-action="DenyRequest" asp-controller="Friends" style="display:inline;">
                                        <input type="hidden" name="senderId" value="@friend.ReqSenderId" />
                                        <button type="submit" class="btn cancel-button">Decline</button>
                                    </form>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="empty-message">No received friend requests</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <hr class="section-divider" />

    <!-- Add the search bar here -->
    <div class="friends-search-section">
        <div class="search-container">
            <input type="text" id="friendSearch" placeholder="Search friends..." class="search-input">
        </div>
    </div>

    <!-- Friends List Section -->
    <div class="friends-list">
        @foreach (var friend in Model.Friends)
        {
            <div class="friend-card">
                <div class="profile-container">
                    @if (friend.Picture.Length > 0)
                    {
                        var base64Image = Convert.ToBase64String(friend.Picture);
                        var imgSrc = $"data:image/jpeg;base64,{base64Image}";
                        <img class="profile-image" src="@imgSrc" alt="User Avatar" />
                    }
                    else
                    {
                        <img class="profile-image" src="~/images/default_pfp.jpg" alt="Default Avatar" />
                    }
                    <div class="status-dot @(friend.IsOnline ? "online" : "offline")"></div>
                </div>

                <div class="friend-info">
                    <p class="friend-name">
                        <a href="@Url.Action("Profile", "Friends", new { username = friend.UserName })">
                            @friend.UserName
                        </a>
                    </p>
                </div>

                <form method="post" asp-action="RemoveFriend" asp-controller="Friends">
                    <input type="hidden" name="friendId" value="@friend.Id" />
                    <button type="submit" class="btn remove-button">Remove</button>
                </form>
            </div>
        }
    </div>
</div>

<style>
    /* CSS Variables for theming */
    :root {
        --accent-color: #8c77d0;
        --text-color: #e4e6eb;
        --muted-color: #8b8d91;
        --success-color: #28a745;
        --success-hover-color: #218838;
        --danger-color: #dc3545;
        --danger-hover-color: #c82333;
        --background-color: #2c2f33;  /* Add this for dark theme */
        --accent-color-dark: #7b6bc3;  /* Darker shade of your accent color */
    }
    
    .friends-page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .friends-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 30px;
    }

    .requests-section {
        margin-bottom: 40px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 20px;
        padding: 25px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(8px);
    }

    .requests-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 25px;
    }

    .request-column {
        background: rgba(255, 255, 255, 0.05);
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease;
    }

    .request-column:hover {
        transform: translateY(-5px);
    }

    .request-column h3 {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 20px;
        color: var(--text-color);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .request-column h3::before {
        content: '';
        display: block;
        width: 8px;
        height: 8px;
        background: var(--accent-color);
        border-radius: 50%;
    }

    .request-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .request-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.03);
        backdrop-filter: blur(4px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
    }

    .request-card:hover {
        transform: translateX(5px);
        background: rgba(255, 255, 255, 0.05);
    }

    .request-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .request-username {
        font-size: 1rem;
        font-weight: 500;
        color: var(--text-color);
    }

    .response-buttons {
        display: flex;
        gap: 8px;
    }

    .accept-button, .cancel-button {
        padding: 8px 16px;
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: 500;
        border: none;
        transition: all 0.3s ease;
    }

    .accept-button {
        background: var(--success-color);
        color: white;
    }

    .accept-button:hover {
        background: var(--success-hover-color);
        transform: translateY(-2px);
    }

    .cancel-button {
        background: var(--danger-color);
        color: white;
    }

    .cancel-button:hover {
        background: var(--danger-hover-color);
        transform: translateY(-2px);
    }

    .empty-message {
        text-align: center;
        padding: 20px;
        color: var(--muted-color);
        font-style: italic;
        background: rgba(255, 255, 255, 0.02);
        border-radius: 10px;
    }

    .section-divider {
        margin: 40px 0;
        border-color: rgba(140, 119, 208, 0.2);
    }

    .friend-request-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        border-radius: 10px;
    }

    .back-button {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 8px 16px;
        border-radius: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }

    .page-title {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 20px;
    }

    .section-title {
        font-size: 20px;
        font-weight: 500;
        margin-bottom: 15px;
    }

    .request-section {
        margin-bottom: 30px;
    }

    .request-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
        max-height: 300px;
        overflow-y: auto;
    }

    .request-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        border-radius: 8px;
    }

    .request-info {
        display: flex;
        flex-direction: column;
    }

    .request-username {
        font-size: 18px;
        font-weight: 600;
    }

    .empty-message {
        font-size: 14px;
        color: #aaa;
    }

    .cancel-button {
        background-color: #dc3545;
        color: white;
    }

    .cancel-button:hover {
        background-color: #c82333;
        color: white;
    }

    .accept-button {
        background-color: #28a745;
        color: white;
        margin-right: 10px;
    }

    .accept-button:hover {
        background-color: #218838;
        color: white;
    }

    .response-buttons {
        display: flex;
        gap: 10px;
    }

    /* Add these styles */
    .friends-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
        padding: 20px 0;
        max-height: calc(100vh - 630px);
        overflow-y: auto;
    }

    .friend-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(4px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
    }

    .friend-card:hover {
        transform: translateY(-5px);
        background: rgba(255, 255, 255, 0.08);
    }

    .profile-container {
        position: relative;
        width: 80px;
        height: 80px;
        margin-bottom: 15px;
    }

    .profile-image {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid var(--accent-color);
        transition: all 0.3s ease;
    }

    .status-dot {
        position: absolute;
        bottom: 5px;
        right: 5px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid var(--background-color);
    }

    .status-dot.online {
        background-color: var(--success-color);
    }

    .status-dot.offline {
        background-color: var(--muted-color);
    }

    .friend-info {
        text-align: center;
        margin-bottom: 15px;
    }

    .friend-name {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .friend-name a {
        color: var(--text-color);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .friend-name a:hover {
        color: var(--accent-color);
    }

    .remove-button {
        padding: 8px 16px;
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: 500;
        background: var(--danger-color);
        color: white;
        border: none;
        transition: all 0.3s ease;
        opacity: 0;
        transform: translateY(10px);
    }

    .friend-card:hover .remove-button {
        opacity: 1;
        transform: translateY(0);
    }

    .remove-button:hover {
        background: var(--danger-hover-color);
        transform: translateY(-2px) !important;
    }

    /* Add/Update these styles */
    .header-buttons {
        display: flex;
        gap: 15px;
    }

    .add-friend-button {
        width: 45px;
        height: 45px;
        border-radius: 12px;
        background: linear-gradient(135deg, var(--accent-color), var(--accent-color-dark));
        color: white;
        font-size: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: all 0.3s ease;
        border: none;
        box-shadow: 0 4px 15px rgba(140, 119, 208, 0.2);
        position: relative;
        overflow: hidden;
    }

    .add-friend-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .add-friend-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(140, 119, 208, 0.3);
        color: white;
    }

    .add-friend-button:hover::before {
        opacity: 1;
    }

    .add-friend-button:active {
        transform: translateY(-1px);
        box-shadow: 0 4px 15px rgba(140, 119, 208, 0.2);
    }

    .friends-list::-webkit-scrollbar,
    .request-list::-webkit-scrollbar {
        width: 8px;
    }

    .friends-list::-webkit-scrollbar-track,
    .request-list::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 4px;
    }

    .friends-list::-webkit-scrollbar-thumb,
    .request-list::-webkit-scrollbar-thumb {
        background: rgba(140, 119, 208, 0.3);
        border-radius: 4px;
    }

    .friends-list::-webkit-scrollbar-thumb:hover,
    .request-list::-webkit-scrollbar-thumb:hover {
        background: rgba(140, 119, 208, 0.5);
    }

    /* Search styles */
    .friends-search-section {
        margin-bottom: 20px;
    }

    .search-container {
        position: relative;
        max-width: 300px;
    }

    .search-input {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 12px 40px 12px 16px;
        color: var(--text-color);
        font-size: 0.9rem;
        width: 100%;
        transition: all 0.3s ease;
    }

    .search-input:focus {
        background: rgba(255, 255, 255, 0.08);
        border-color: var(--accent-color);
        outline: none;
        box-shadow: 0 0 0 2px rgba(140, 119, 208, 0.2);
    }

    .search-input::placeholder {
        color: var(--muted-color);
    }
</style>

<script>
    document.getElementById('friendSearch').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const friendCards = document.querySelectorAll('.friend-card');
        
        friendCards.forEach(card => {
            const friendName = card.querySelector('.friend-name').textContent.toLowerCase();
            if (friendName.includes(searchTerm)) {
                card.style.display = 'flex';
            } else {
                card.style.display = 'none';
            }
        });
    });
</script>
