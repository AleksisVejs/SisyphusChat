@model ChatSettingsViewModel

<head>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@3.3.0/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/user-status.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/creategroup.css" asp-append-version="true" />
</head>

<body class="bg-gray-100">
    <form asp-action="UpdateGroupChat" method="post" class="max-w-lg mx-auto p-4 bg-white form-container">
        <input id="chat-id-val" type="hidden" asp-for="ChatId" />

        <h2 class="text-2xl font-bold mb-4 centered-heading">Group Chat Settings</h2>

        <div class="form-group mb-4">
            <label asp-for="ChatName" class="control-label">Current Chat Group Name:</label>
            <input asp-for="ChatName" class="form-control" readonly />
        </div>

        @if (Model.CurrentUser == Model.ChatOwner)
        {
            <div class="form-group mb-4">
                <label asp-for="NewChatName" class="control-label">New Chat Group Name:</label>
                <input asp-for="NewChatName" class="form-control" />
                <span asp-validation-for="NewChatName" class="text-danger text-red-500"></span>
            </div>
        }

        <div class="form-group mb-4">
            <h3 class="text-xl font-bold mb-2 purple-title">Chat owner</h3>
            <div class="chat-owner-name">
                <span>@Model.ChatOwner</span>
                <span class="user-status @(Model.CurrentUser == Model.ChatOwner ? "online" : "offline")"></span>
            </div>
            <h2 class="text-xl font-bold mb-2 purple-title">Users in group chat</h2>
            <input type="text" id="searchInChatUsers" placeholder="Search users in chat..." class="search-input mb-2" />
            <ul id="chatUsersList" class="user-list">
                @foreach (var user in Model.ChatUsers)
                {
                    <li class="user-item mb-2">
                        @user.UserName
                         <span class="user-status @(user.IsOnline ? "online" : "offline")">@(user.IsOnline ? "Online" : "Offline")</span>
                        @if (Model.CurrentUser == Model.ChatOwner)
                        {
                            <button asp-action="DeleteUserFromChat" asp-route-userId="@user.Id" asp-route-chatId="@Model.ChatId" class="btn btn-danger ml-2">
                                Delete
                            </button>
                        }
                    </li>
                }
            </ul>
        </div>

        @if (Model.CurrentUser == Model.ChatOwner)
        {
            <div class="form-group mb-4">
                <h2 class="text-xl font-bold mb-2 purple-title">Select users to add</h2>
                <input type="text" id="searchInput" placeholder="Search users to add..." class="search-input mb-2" />

                <ul id="notInChatUsersList" class="user-list">
                    @foreach (var user in Model.NotChatUsers)
                    {
                        <li class="user-item mb-2" onclick="toggleCheckbox(this)">
                            <input type="checkbox" class="user-checkbox" value="@user.UserName" />
                            <span>@user.UserName</span>
                            <span class="user-status @(user.IsOnline ? "bg-green-500" : "bg-gray-500") w-3 h-3 rounded-full"></span>
                        </li>
                    }
                </ul>
            </div>

            <div style="display: none;">
                <input type="hidden" id="selectedUsers" name="SelectedUsers" />
            </div>

            <div class="button-container">
                <button type="button" class="bg-white text-purple-800 border border-purple-800 py-2 px-4 rounded-sm hover:bg-purple-800 hover:text-white transition-colors duration-200" onclick="returnBack()">Back To Chat</button>
                <button type="submit" class="create-chat-button">Update Group Chat</button>
            </div>
        }
    </form>

    <script type="text/javascript">
        function updateSelectedUsers() {
            const selectedUsers = Array.from(document.querySelectorAll('#notInChatUsersList .user-checkbox:checked'))
                .map(checkbox => checkbox.value);

            const container = document.getElementById('selectedUsers');
            container.value = JSON.stringify(selectedUsers);
        }

        function toggleCheckbox(item) {
            const checkbox = item.querySelector('.user-checkbox');
            checkbox.checked = !checkbox.checked;
            updateSelectedUsers();
        }

        function filterUsers(listId, searchInputId) {
            const searchTerm = document.getElementById(searchInputId).value.toLowerCase();
            const items = document.querySelectorAll(`#${listId} .user-item`);

            items.forEach(item => {
                const text = item.textContent.toLowerCase();
                if (text.includes(searchTerm)) {
                    item.style.display = "";
                } else {
                    item.style.display = "none";
                }
            });
        }

        document.getElementById('searchInput').addEventListener('input', function () {
            filterUsers('notInChatUsersList', 'searchInput');
        });

        document.getElementById('searchInChatUsers').addEventListener('input', function () {
            filterUsers('chatUsersList', 'searchInChatUsers');
        });

        function returnBack() {
            const chatId = document.getElementById("chat-id-val").value;
            window.location.href = '@Url.Action("OpenGroupChat", "Chat")' + '?chatId=' + encodeURIComponent(chatId);
        }

        function deleteUser(userId, event) {
            event.preventDefault();
            const chatId = document.getElementById("chat-id-val").value;

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteUserFromChat")',
                data: { userId, chatId },
                success: function () {
                    location.reload();
                },
                error: function () {
                    alert('Failed to delete user');
                }
            });
        }

        document.querySelector('form').addEventListener('submit', function () {
            updateSelectedUsers();
        });
    </script>
</body>