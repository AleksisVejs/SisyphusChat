@using SisyphusChat.Infrastructure.Entities
@model AdminViewModel
@{
    ViewData["Title"] = "Admin Page";
}

<div>
    <div class="row">
        @foreach (var report in new[] {
        new { Title = "Attachments Report", ReportType = "Attachments"},
        new { Title = "Chats Report", ReportType = "Chats"},
        new { Title = "Messages Report", ReportType = "Messages"},
        new { Title = "Users Report", ReportType = "Users"},
        new { Title = "User Last Message Report", ReportType = "Users With Last Message"},
        new { Title = "User Activity Report", ReportType = "User Activity"},
        new { Title = "Attachments Usage Report", ReportType = "Attachments Usage"},
        new { Title = "Private chats Usage Report", ReportType = "Message Private Chats Activity"},
        new { Title = "Public chats Usage Report", ReportType = "Message Group Chats Activity"},
        new { Title = "Chat Participation Reports Usage", ReportType = "Chat Participation"}
        })
        {
            <div class="col-md-6 col-lg-3 mb-3">
                <div class="dropdown">
                    <button class="w-100 btn-primary btn-lg dropdown-toggle" type="button" id="@report.ReportType-@Guid.NewGuid()" data-bs-toggle="dropdown" aria-expanded="false">
                        @report.Title
                    </button>
                    <ul class="dropdown-menu w-100" aria-labelledby="@report.ReportType-@Guid.NewGuid()">
                        <li>
                            <a class="dropdown-item" href="/Admin/DownloadReport?reportType=@report.ReportType&format=pdf">
                                <i class="fas fa-download"></i> Download PDF
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="/Admin/DownloadReport?reportType=@report.ReportType&format=excel">
                                <i class="fas fa-download"></i> Download Excel
                            </a>
                        </li>

                        <li>
                            <a class="dropdown-item" href="#" onclick="previewReport('@report.ReportType')">
                                <i class="fas fa-eye"></i> Preview
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <div class="card admin-card">
            <div class="card-header">
                <h5>Send Admin Notification</h5>
            </div>
            <div class="card-body">
                <form id="adminNotificationForm">
                    <div class="mb-3">
                        <label for="notificationMessage" class="form-label">Message</label>
                        <textarea class="form-control" id="notificationMessage" rows="3" required 
                            placeholder="Enter your notification message here..."></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane me-2"></i>Send Notification
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <div class="card admin-card bg-dark text-light">
            <div class="card-header">
                <h5 class="mb-0">User Management</h5>
            </div>
            <div class="card-body">
                <!-- Search and Filter Controls -->
                <div class="row mb-3">
                    <div class="col-md-8">
                        <div class="input-group">
                            <span class="input-group-text bg-dark text-light">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" id="userSearch" class="form-control bg-dark text-light" 
                                   placeholder="Search by username...">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select id="loginFilter" class="form-select bg-dark text-light">
                            <option value="all">All Users</option>
                            <option value="today">Logged in today</option>
                            <option value="week">Logged in this week</option>
                            <option value="never">Never logged in</option>
                        </select>
                    </div>
                </div>

                <!-- Users Table -->
                <div class="table-responsive" style="max-height: 500px; overflow-y: auto;">
                    <table class="table table-dark table-hover">
                        <thead class="sticky-top">
                            <tr>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Status</th>
                                <th>Last Login</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users.Where(u => !u.IsAdmin))
                            {
                                <tr class="user-row">
                                    <td>@user.UserName</td>
                                    <td>@user.Email</td>
                                    <td>
                                        <span class="badge rounded-pill @(user.IsBanned ? "bg-danger" : "bg-success") px-3">
                                            @(user.IsBanned ? "Banned" : "Active")
                                        </span>
                                    </td>
                                    <td>@(user.LastLogin?.ToString("g") ?? "Never")</td>
                                    <td class="text-end">
                                        @if (!user.IsBanned)
                                        {
                                            <div class="dropdown d-inline">
                                                <button class="btn btn-danger px-3" type="button" 
                                                        id="banDropdown_@user.Id" 
                                                        data-bs-toggle="dropdown" 
                                                        aria-expanded="false">
                                                    Ban <i class="fas fa-caret-down ms-1"></i>
                                                </button>
                                                <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
                                                    <li>
                                                        <form asp-action="BanUser" method="post" class="px-2">
                                                            <input type="hidden" name="userId" value="@user.Id" />
                                                            <input type="hidden" name="duration" value="TwentyFourHours" />
                                                            <button type="submit" class="dropdown-item text-danger">24 Hours</button>
                                                        </form>
                                                    </li>
                                                    <li>
                                                        <form asp-action="BanUser" method="post" class="px-2">
                                                            <input type="hidden" name="userId" value="@user.Id" />
                                                            <input type="hidden" name="duration" value="OneWeek" />
                                                            <button type="submit" class="dropdown-item text-danger">One Week</button>
                                                        </form>
                                                    </li>
                                                    <li>
                                                        <form asp-action="BanUser" method="post" class="px-2">
                                                            <input type="hidden" name="userId" value="@user.Id" />
                                                            <input type="hidden" name="duration" value="OneMonth" />
                                                            <button type="submit" class="dropdown-item text-danger">One Month</button>
                                                        </form>
                                                    </li>
                                                    <li><hr class="dropdown-divider bg-secondary"></li>
                                                    <li>
                                                        <form asp-action="BanUser" method="post" class="px-2">
                                                            <input type="hidden" name="userId" value="@user.Id" />
                                                            <input type="hidden" name="duration" value="Permanent" />
                                                            <button type="submit" class="dropdown-item text-danger">Permanent Ban</button>
                                                        </form>
                                                    </li>
                                                </ul>
                                            </div>
                                        }
                                        else
                                        {
                                            <form asp-action="UnbanUser" method="post" class="d-inline">
                                                <input type="hidden" name="userId" value="@user.Id" />
                                                <button type="submit" class="btn btn-success px-3">Unban</button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function previewReport(reportType) {
        window.open(`/Admin/PreviewReport?reportType=${reportType}`, '_blank');
    }

    document.getElementById('adminNotificationForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const message = document.getElementById('notificationMessage').value;
        
        try {
            const response = await fetch('/Admin/SendNotification', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message })
            });
            
            if (response.ok) {
                alert('Notification sent successfully');
                document.getElementById('notificationMessage').value = '';
            } else {
                alert('Failed to send notification');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to send notification');
        }
    });

    document.addEventListener('DOMContentLoaded', function() {
        const userSearch = document.getElementById('userSearch');
        const loginFilter = document.getElementById('loginFilter');
        const userRows = document.querySelectorAll('.user-row');

        function filterUsers() {
            const searchTerm = userSearch.value.toLowerCase();
            const filterValue = loginFilter.value;
            const now = new Date();

            userRows.forEach(row => {
                const username = row.querySelector('td:first-child').textContent.toLowerCase();
                const lastLogin = row.querySelector('td:nth-child(4)').textContent;
                let showRow = username.includes(searchTerm);

                if (showRow && filterValue !== 'all') {
                    const loginDate = lastLogin !== 'Never' ? new Date(lastLogin) : null;
                    
                    switch(filterValue) {
                        case 'today':
                            showRow = loginDate?.toDateString() === now.toDateString();
                            break;
                        case 'week':
                            const weekAgo = new Date(now - 7 * 24 * 60 * 60 * 1000);
                            showRow = loginDate && loginDate > weekAgo;
                            break;
                        case 'never':
                            showRow = lastLogin === 'Never';
                            break;
                    }
                }

                row.style.display = showRow ? '' : 'none';
            });
        }

        userSearch.addEventListener('input', filterUsers);
        loginFilter.addEventListener('change', filterUsers);
    });
</script>

<style scoped>
    .btn-lg {
        font-size: 1rem;
    }
</style>
